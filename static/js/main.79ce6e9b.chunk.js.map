{"version":3,"sources":["components/Header/Header.jsx","api/dataAPI.js","features/table/dataSchema.js","features/table/tableSlice.js","features/table/ItemDetails.jsx","features/table/Table.jsx","utils/debounce.js","features/table/Milestone.jsx","components/Backdrop/Backdrop.jsx","components/App/App.jsx","app/store.js","serviceWorker.js","utils/customTheme.js","index.js"],"names":["useStyles","makeStyles","theme","header","marginTop","spacing","accentTitle","textDecoration","color","palette","primary","main","fontWeight","Header","classes","className","Typography","variant","align","href","gutterBottom","apiGetBigData","a","axios","get","process","bigData","apiGetSmallData","smallData","dataSchema","object","shape","id","number","required","firstName","string","lastName","email","phone","address","streetAddress","city","state","zip","description","tableSlice","createSlice","name","initialState","loading","data","error","isBigDataRequired","reducers","getDataStart","getDataFailure","payload","getDataSuccess","setIsBigDataRequeired","resetData","actions","changeRequirement","dispatch","root","width","padding","ItemDetails","selectedItem","Paper","component","join","trim","descendingComparator","b","orderBy","headCells","label","EnhancedTableHead","props","order","onRequestSort","TableHead","TableRow","map","headCell","TableCell","key","sortDirection","TableSortLabel","active","direction","onClick","property","event","useToolbarStyles","paddingLeft","paddingRight","highlight","type","secondary","backgroundColor","lighten","light","text","dark","title","flex","search","position","borderRadius","fade","common","white","marginRight","marginLeft","breakpoints","up","searchIcon","height","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","transition","transitions","create","EnhancedTableToolbar","onFilterChange","useState","filterInputValue","setFilterInputValue","onFilterChangeDebounced","useRef","func","wait","immediate","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","apply","debounced","this","arguments","callNow","clear","clearTimeout","flush","debounce","current","useEffect","Toolbar","clsx","Tooltip","InputBase","value","onChange","target","placeholder","input","inputProps","paddingBottom","paper","marginBottom","table","minWidth","EnhancedTable","useDispatch","setOrder","filter","setFilter","setOrderBy","page","setPage","setSelectedItem","rows","useSelector","response","Array","isArray","Error","row","isValid","getData","emptyRows","Math","min","length","Container","Link","preventDefault","console","log","TableContainer","Table","aria-labelledby","size","aria-label","rowCount","TableBody","array","comparator","stabilizedThis","el","RegExp","test","Object","values","index","sort","sortAndFilter","getComparator","slice","hover","role","tabIndex","scope","style","colSpan","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","newPage","margin","maxWidth","button","Milestone","handleButtonClick","Button","backdrop","zIndex","drawer","SimpleBackdrop","dataLoading","Backdrop","open","CircularProgress","App","configureStore","reducer","tableReducer","Boolean","window","location","hostname","match","createMuiTheme","ReactDOM","render","StrictMode","store","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.79ce6e9b.chunk.js","sourcesContent":["import React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    header: {\n        marginTop: theme.spacing(5),\n    },\n    accentTitle: {\n        textDecoration: 'none',\n        color: theme.palette.primary.main,\n        fontWeight: '500',\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n}))\n\nexport default function Header() {\n    const classes = useStyles()\n\n    return (\n        <header className={classes.header}>\n            <Typography variant=\"h2\" align=\"center\">\n                Интернет-агентство{' '}\n                <a\n                    href=\"https://future-group.ru\"\n                    className={classes.accentTitle}\n                >\n                    Future\n                </a>{' '}\n                ✌🏻\n            </Typography>\n            <Typography variant=\"subtitle1\" gutterBottom align=\"center\">\n                Тестовое задание\n            </Typography>\n        </header>\n    )\n}\n","import axios from 'axios'\n\nexport async function apiGetBigData() {\n    const bigData = await axios.get(\n        `${process.env.REACT_APP_API_HOST}/Kgnx7/future-test/dev/bigData.json`\n    )\n\n    return bigData\n}\n\nexport async function apiGetSmallData() {\n    const smallData = await axios.get(\n        `${process.env.REACT_APP_API_HOST}/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}`\n    )\n\n    return smallData\n}\n","import { string, object, number } from 'yup'\n\nexport const dataSchema = object().shape({\n    id: number().required(),\n    firstName: string().required(),\n    lastName: string().required(),\n    email: string().email().required(),\n    phone: string()\n        // TODO: регулярное выражение проверяющее номер\n        // .matches(//)\n        .required(),\n    address: object({\n        streetAddress: string(),\n        city: string(),\n        state: string(),\n        zip: number(),\n    }),\n    description: string(),\n})\n","import { createSlice } from '@reduxjs/toolkit'\nimport { apiGetBigData, apiGetSmallData } from '../../api/dataAPI'\n\nimport { dataSchema } from './dataSchema'\n\nexport const tableSlice = createSlice({\n    name: 'table',\n    initialState: {\n        loading: false,\n        data: [],\n        error: null,\n        isBigDataRequired: null,\n    },\n    reducers: {\n        getDataStart: (state) => {\n            state.loading = true\n        },\n        getDataFailure: (state, { payload }) => {\n            state.loading = false\n            state.error = payload\n        },\n        getDataSuccess: (state, { payload }) => {\n            state.loading = false\n            state.data = payload\n        },\n        setIsBigDataRequeired: (state, { payload }) => {\n            state.isBigDataRequired = payload\n        },\n        resetData: (state) => {\n            state.data = []\n        },\n    },\n})\n\nexport const {\n    getDataStart,\n    getDataFailure,\n    getDataSuccess,\n    resetData,\n    setIsBigDataRequeired,\n} = tableSlice.actions\n\nexport const changeRequirement = (isBigDataRequired) => (dispatch) => {\n    dispatch(setIsBigDataRequeired(isBigDataRequired))\n}\n\nexport const getData = (isBigDataRequired) => async (dispatch) => {\n    try {\n        dispatch(getDataStart())\n\n        const response = isBigDataRequired\n            ? await apiGetBigData()\n            : await apiGetSmallData()\n\n        if (!Array.isArray(response.data)) {\n            throw new Error(400)\n        }\n\n        for (let row of response.data) {\n            if (!(await dataSchema.isValid(row))) {\n                throw new Error(400)\n            }\n        }\n\n        dispatch(getDataSuccess(response.data))\n    } catch (error) {\n        // TODO: ДОБАВИТЬ функцию обработки ошибок\n        // handleError(error, dispatch)\n        dispatch(getDataFailure(error))\n    }\n}\n\nexport const selectData = (state) => state.table.data\n\nexport default tableSlice.reducer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport { lighten, fade, makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        padding: theme.spacing(2),\n    },\n}))\n\nexport default function ItemDetails({ selectedItem }) {\n    const classes = useStyles()\n    return (\n        selectedItem && (\n            <Paper component=\"section\" className={classes.root}>\n                <Typography variant=\"h3\" gutterBottom align=\"center\">\n                    Детали\n                </Typography>\n                <Typography variant=\"body1\">\n                    <Typography variant=\"caption\">Идентификатор: </Typography>\n                    {selectedItem.id}\n                </Typography>\n                <Typography variant=\"body1\">\n                    <Typography variant=\"caption\">ФИО: </Typography>\n                    {[selectedItem.firstName, selectedItem.lastName]\n                        .join(' ')\n                        .trim()}\n                </Typography>\n                <Typography variant=\"body1\">\n                    <Typography variant=\"caption\">\n                        Электронная почта:{' '}\n                    </Typography>\n                    {selectedItem.email}\n                </Typography>\n                <Typography variant=\"body1\">\n                    <Typography variant=\"caption\">Телефон: </Typography>\n                    {selectedItem.phone}\n                </Typography>\n                <Typography variant=\"body1\">\n                    <Typography variant=\"caption\">Адрес: </Typography>\n                    {[\n                        selectedItem.address.state,\n                        selectedItem.address.city,\n                        selectedItem.address.streetAddress,\n                        selectedItem.address.zip,\n                    ]\n                        .join(', ')\n                        .trim()}\n                </Typography>\n            </Paper>\n        )\n    )\n}\n\nItemDetails.propTypes = {\n    selectedItem: PropTypes.object.isRequired,\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { getData, changeRequirement } from './tableSlice'\n\nimport clsx from 'clsx'\nimport { lighten, fade, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport Container from '@material-ui/core/Container'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport SearchIcon from '@material-ui/icons/Search'\nimport debounce from '../../utils/debounce'\n\nimport ItemDetails from './ItemDetails'\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1\n    }\n    return 0\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction sortAndFilter(array, filter, comparator) {\n    array = array.filter((el) =>\n        new RegExp(`${filter}`, 'im').test(Object.values(el))\n    )\n    const stabilizedThis = array.map((el, index) => [el, index])\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0])\n        if (order !== 0) return order\n        return a[1] - b[1]\n    })\n    return stabilizedThis.map((el) => el[0])\n}\n\nconst headCells = [\n    { id: 'id', label: 'Идентификатор' },\n    { id: 'firstName', label: 'Имя' },\n    { id: 'lastName', label: 'Фамилия' },\n    { id: 'email', label: 'Почта' },\n    { id: 'phone', label: 'Телефон' },\n]\n\nfunction EnhancedTableHead(props) {\n    const { order, orderBy, onRequestSort } = props\n\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property)\n    }\n\n    return (\n        <TableHead>\n            <TableRow>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align=\"center\"\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    )\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n}\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    title: {\n        flex: '1 1 100%',\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch',\n        },\n    },\n}))\n\nconst EnhancedTableToolbar = ({ onFilterChange }) => {\n    const classes = useToolbarStyles()\n    const [filterInputValue, setFilterInputValue] = useState('')\n\n    const onFilterChangeDebounced = useRef(debounce(onFilterChange, 500))\n        .current\n\n    useEffect(() => {\n        return () => {\n            onFilterChangeDebounced.clear()\n        }\n    }, [])\n\n    const handleFilterInputChange = (event) => {\n        const value = event.target.value\n        setFilterInputValue(value)\n        onFilterChangeDebounced(value)\n    }\n\n    return (\n        <Toolbar className={clsx(classes.root)}>\n            <Typography\n                className={classes.title}\n                variant=\"h6\"\n                id=\"tableTitle\"\n                component=\"div\"\n            >\n                Таблица с данными 😉\n            </Typography>\n\n            <Tooltip title=\"Поиск\">\n                <div className={classes.search}>\n                    <div className={classes.searchIcon}>\n                        <SearchIcon />\n                    </div>\n                    <InputBase\n                        value={filterInputValue}\n                        onChange={handleFilterInputChange}\n                        placeholder=\"Поиск…\"\n                        classes={{\n                            root: classes.inputRoot,\n                            input: classes.inputInput,\n                        }}\n                        inputProps={{ 'aria-label': 'поиск' }}\n                    />\n                </div>\n            </Tooltip>\n        </Toolbar>\n    )\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        paddingBottom: theme.spacing(3),\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(3),\n    },\n    table: {\n        minWidth: 750,\n    },\n}))\n\nexport default function EnhancedTable({ isBigDataRequired }) {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const [order, setOrder] = useState('asc')\n    const [filter, setFilter] = useState('')\n    const [orderBy, setOrderBy] = useState('id')\n    const [page, setPage] = useState(0)\n    const [selectedItem, setSelectedItem] = useState(null)\n\n    const rowsPerPage = 10\n\n    const rows = useSelector((state) => state.table.data)\n\n    useEffect(() => {\n        dispatch(getData(isBigDataRequired))\n    }, [])\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc'\n        setOrder(isAsc ? 'desc' : 'asc')\n        setOrderBy(property)\n    }\n\n    const handleRowClick = (event, item) => {\n        setSelectedItem(item)\n    }\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage)\n    }\n\n    const handleBackClick = (event) => {\n        event.preventDefault()\n        dispatch(changeRequirement(null))\n    }\n\n    const handleFilterChange = (filter) => {\n        setFilter(filter)\n        console.log(filter)\n    }\n\n    const emptyRows =\n        rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage)\n\n    return (\n        <Container className={classes.root}>\n            <Typography component=\"span\">\n                <Link onClick={handleBackClick}>{'<- Я передумал 🙄'}</Link>\n            </Typography>\n            <Paper component=\"section\" className={classes.paper}>\n                <EnhancedTableToolbar onFilterChange={handleFilterChange} />\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size=\"small\"\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            order={order}\n                            orderBy={orderBy}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {sortAndFilter(\n                                rows,\n                                filter,\n                                getComparator(order, orderBy)\n                            )\n                                .slice(\n                                    page * rowsPerPage,\n                                    page * rowsPerPage + rowsPerPage\n                                )\n                                .map((row) => {\n                                    return (\n                                        <TableRow\n                                            hover\n                                            onClick={(event) =>\n                                                handleRowClick(event, row)\n                                            }\n                                            role=\"checkbox\"\n                                            tabIndex={-1}\n                                            key={`${row.id}-${row.email}`}\n                                        >\n                                            <TableCell\n                                                component=\"th\"\n                                                align=\"center\"\n                                                scope=\"row\"\n                                            >\n                                                {row.id}\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                {row.firstName}\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                {row.lastName}\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                {row.email}\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                {row.phone}\n                                            </TableCell>\n                                        </TableRow>\n                                    )\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow\n                                    style={{\n                                        height: 33 * emptyRows,\n                                    }}\n                                >\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                />\n            </Paper>\n            <ItemDetails selectedItem={selectedItem} />\n        </Container>\n    )\n}\n","export default function debounce(func, wait, immediate) {\n    var timeout, args, context, timestamp, result\n    if (null == wait) wait = 100\n\n    function later() {\n        var last = Date.now() - timestamp\n\n        if (last < wait && last >= 0) {\n            timeout = setTimeout(later, wait - last)\n        } else {\n            timeout = null\n            if (!immediate) {\n                result = func.apply(context, args)\n                context = args = null\n            }\n        }\n    }\n\n    var debounced = function () {\n        context = this\n        args = arguments\n        timestamp = Date.now()\n        var callNow = immediate && !timeout\n        if (!timeout) timeout = setTimeout(later, wait)\n        if (callNow) {\n            result = func.apply(context, args)\n            context = args = null\n        }\n\n        return result\n    }\n\n    debounced.clear = function () {\n        if (timeout) {\n            clearTimeout(timeout)\n            timeout = null\n        }\n    }\n\n    debounced.flush = function () {\n        if (timeout) {\n            result = func.apply(context, args)\n            context = args = null\n\n            clearTimeout(timeout)\n            timeout = null\n        }\n    }\n\n    return debounced\n}\n","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport Table from './Table'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { changeRequirement } from './tableSlice'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: '0 auto',\n        marginTop: theme.spacing(15),\n        maxWidth: '600px',\n        display: 'flex',\n        // flexFlow: 'row wrap',\n        justifyContent: 'space-between',\n    },\n    button: {\n        // flex: '0 0 auto',\n        borderRadius: 0,\n        padding: '12px 30px',\n        // textTransform: 'capitalize',\n    },\n}))\n\n// TODO: сделать кастомные кнопки, как на сайте https://future-group.ru/\nexport default function Milestone() {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    // const [isBigDataRequired, setIsBigDataRequired] = useState(null)\n    const isBigDataRequired = useSelector(\n        (state) => state.table.isBigDataRequired\n    )\n\n    const handleButtonClick = (isBigDataRequired) => {\n        // setIsBigDataRequired(isBigDataRequired)\n        dispatch(changeRequirement(isBigDataRequired))\n    }\n\n    return isBigDataRequired === null ? (\n        <Container>\n            <div className={classes.root}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    onClick={(event) => handleButtonClick(false)}\n                >\n                    Небольшой набор данных 😐\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    onClick={(event) => handleButtonClick(true)}\n                >\n                    Большой набор данных 🙀\n                </Button>\n            </div>\n        </Container>\n    ) : (\n        <Table isBigDataRequired={isBigDataRequired} />\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Backdrop from '@material-ui/core/Backdrop'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#6ae695',\n    },\n}))\n\nexport default function SimpleBackdrop() {\n    const classes = useStyles()\n\n    const dataLoading = useSelector((state) => state.table.loading)\n\n    return (\n        <Backdrop className={classes.backdrop} open={dataLoading}>\n            <CircularProgress color=\"inherit\" />\n        </Backdrop>\n    )\n}\n","import React, { useState } from 'react'\r\nimport Header from '../../components/Header'\r\nimport Milestone from '../../features/table/Milestone'\r\n\r\nimport Backdrop from '../../components/Backdrop'\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Header />\r\n            <main>\r\n                <Milestone />\r\n            </main>\r\n            <Backdrop />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport tableReducer from '../features/table/tableSlice'\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        table: tableReducer,\r\n    },\r\n})\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles'\n\nexport default createMuiTheme({\n    palette: {\n        primary: {\n            main: '#0e43fe',\n        },\n        secondary: {\n            main: '#6ae695',\n        },\n    },\n})\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './components/App'\r\nimport store from './app/store'\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { ThemeProvider } from '@material-ui/core/styles'\r\nimport theme from './utils/customTheme'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <ThemeProvider theme={theme}>\r\n                <App />\r\n            </ThemeProvider>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}