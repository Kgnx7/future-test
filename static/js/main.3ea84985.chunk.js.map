{"version":3,"sources":["components/Header/Header.jsx","api/dataAPI.js","features/table/dataSchema.js","features/table/tableSlice.js","features/table/ItemDetails.jsx","features/table/CreateItemDialog.jsx","features/table/Table.jsx","utils/debounce.js","features/table/Milestone.jsx","components/Backdrop/Backdrop.jsx","components/App/App.jsx","app/store.js","serviceWorker.js","utils/customTheme.js","index.js"],"names":["useStyles","makeStyles","theme","header","marginTop","spacing","accentTitle","textDecoration","color","palette","primary","main","fontWeight","Header","classes","className","Typography","variant","align","href","gutterBottom","apiGetBigData","a","axios","get","process","bigData","apiGetSmallData","smallData","dataSchema","object","shape","id","number","required","firstName","string","lastName","email","phone","address","streetAddress","city","state","zip","description","tableSlice","createSlice","name","initialState","loading","data","error","isBigDataRequired","reducers","getDataStart","getDataFailure","payload","getDataSuccess","setIsBigDataRequeired","resetData","addItem","actions","changeRequirement","dispatch","root","width","padding","ItemDetails","selectedItem","Paper","component","join","trim","CreateItemDialog","open","onClose","onSubmit","useState","setId","setFirstName","setLastName","setEmail","setPhone","setState","setCity","setAddress","setZip","setDescription","handleClose","Dialog","fullWidth","maxWidth","aria-labelledby","DialogTitle","DialogContent","TextField","value","onChange","event","target","autoFocus","margin","label","type","DialogActions","Button","onClick","disabled","descendingComparator","b","orderBy","headCells","EnhancedTableHead","props","order","onRequestSort","TableHead","TableRow","map","headCell","TableCell","key","sortDirection","TableSortLabel","active","direction","property","useToolbarStyles","paddingLeft","paddingRight","highlight","secondary","backgroundColor","lighten","light","text","dark","title","flex","search","position","borderRadius","fade","common","white","marginRight","marginLeft","breakpoints","up","searchIcon","height","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","transition","transitions","create","EnhancedTableToolbar","onFilterChange","onCreate","filterInputValue","setFilterInputValue","onFilterChangeDebounced","useRef","func","wait","immediate","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","apply","debounced","this","arguments","callNow","clear","clearTimeout","flush","debounce","current","useEffect","Toolbar","clsx","Tooltip","InputBase","placeholder","input","inputProps","IconButton","aria-label","paddingBottom","paper","marginBottom","table","minWidth","EnhancedTable","useDispatch","setOrder","filter","setFilter","setOrderBy","page","setPage","setSelectedItem","createItemDialog","setCreateItemDialog","rows","useSelector","response","Array","isArray","Error","row","isValid","getData","toggleCreateItemDialog","emptyRows","Math","min","length","Container","Link","preventDefault","data-testid","TableContainer","Table","size","rowCount","TableBody","array","comparator","stabilizedThis","el","RegExp","replace","test","Object","values","index","sort","sortAndFilter","getComparator","slice","hover","role","tabIndex","scope","style","colSpan","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","newPage","newItem","addNewItem","button","Milestone","handleButtonClick","backdrop","zIndex","drawer","SimpleBackdrop","dataLoading","Backdrop","CircularProgress","App","configureStore","reducer","tableReducer","Boolean","window","location","hostname","match","createMuiTheme","ReactDOM","render","StrictMode","store","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3ea84985.chunk.js","sourcesContent":["import React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    header: {\n        marginTop: theme.spacing(5),\n    },\n    accentTitle: {\n        textDecoration: 'none',\n        color: theme.palette.primary.main,\n        fontWeight: '500',\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n}))\n\nexport default function Header() {\n    const classes = useStyles()\n\n    return (\n        <header className={classes.header}>\n            <Typography variant=\"h2\" align=\"center\">\n                Интернет-агентство{' '}\n                <a\n                    href=\"https://future-group.ru\"\n                    className={classes.accentTitle}\n                >\n                    Future\n                </a>{' '}\n                ✌🏻\n            </Typography>\n            <Typography variant=\"subtitle1\" gutterBottom align=\"center\">\n                Тестовое задание\n            </Typography>\n        </header>\n    )\n}\n","import axios from 'axios'\n\nexport async function apiGetBigData() {\n    const bigData = await axios.get(\n        `${process.env.REACT_APP_API_HOST}/Kgnx7/future-test/dev/bigData.json`\n    )\n\n    return bigData\n}\n\nexport async function apiGetSmallData() {\n    const smallData = await axios.get(\n        `${process.env.REACT_APP_API_HOST}/Kgnx7/future-test/dev/smallData.json`\n    )\n\n    return smallData\n}\n","import { string, object, number } from 'yup'\n\nexport const dataSchema = object().shape({\n    id: number().required(),\n    firstName: string().required(),\n    lastName: string().required(),\n    email: string().email().required(),\n    phone: string()\n        // TODO: регулярное выражение проверяющее номер\n        // .matches(//)\n        .required(),\n    address: object({\n        streetAddress: string(),\n        city: string(),\n        state: string(),\n        zip: number(),\n    }),\n    description: string(),\n})\n","import { createSlice } from '@reduxjs/toolkit'\nimport { apiGetBigData, apiGetSmallData } from '../../api/dataAPI'\n\nimport { dataSchema } from './dataSchema'\n\nexport const tableSlice = createSlice({\n    name: 'table',\n    initialState: {\n        loading: false,\n        data: [],\n        error: null,\n        isBigDataRequired: null,\n    },\n    reducers: {\n        getDataStart: (state) => {\n            state.loading = true\n        },\n        getDataFailure: (state, { payload }) => {\n            state.loading = false\n            state.error = payload\n        },\n        getDataSuccess: (state, { payload }) => {\n            state.loading = false\n            state.data = payload\n        },\n        setIsBigDataRequeired: (state, { payload }) => {\n            state.isBigDataRequired = payload\n        },\n        resetData: (state) => {\n            state.data = []\n        },\n        addItem: (state, { payload }) => {\n            state.data = [...state.data, payload]\n        },\n    },\n})\n\nexport const {\n    getDataStart,\n    getDataFailure,\n    getDataSuccess,\n    resetData,\n    setIsBigDataRequeired,\n    addItem,\n} = tableSlice.actions\n\nexport const changeRequirement = (isBigDataRequired) => (dispatch) => {\n    dispatch(setIsBigDataRequeired(isBigDataRequired))\n}\n\nexport const addNewItem = (newItem) => (dispatch) => {\n    try {\n        dispatch(addItem(newItem))\n    } catch (error) {\n        // TODO: ДОБАВИТЬ функцию обработки ошибок\n        // handleError(error, dispatch)\n    }\n}\n\nexport const getData = (isBigDataRequired) => async (dispatch) => {\n    try {\n        dispatch(getDataStart())\n\n        const response = isBigDataRequired\n            ? await apiGetBigData()\n            : await apiGetSmallData()\n\n        if (!Array.isArray(response.data)) {\n            throw new Error(400)\n        }\n\n        for (let row of response.data) {\n            if (!(await dataSchema.isValid(row))) {\n                throw new Error(400)\n            }\n        }\n\n        dispatch(getDataSuccess(response.data))\n    } catch (error) {\n        // TODO: ДОБАВИТЬ функцию обработки ошибок\n        // handleError(error, dispatch)\n        dispatch(getDataFailure(error))\n    }\n}\n\nexport const selectData = (state) => state.table.data\n\nexport default tableSlice.reducer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport { lighten, fade, makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        padding: theme.spacing(2),\n    },\n}))\n\nexport default function ItemDetails({ selectedItem }) {\n    const classes = useStyles()\n    return (\n        selectedItem && (\n            <Paper component=\"section\" className={classes.root}>\n                <Typography variant=\"h3\" gutterBottom align=\"center\">\n                    Детали\n                </Typography>\n                <Typography variant=\"body1\">\n                    <Typography variant=\"caption\">Идентификатор: </Typography>\n                    {selectedItem.id}\n                </Typography>\n                <Typography variant=\"body1\">\n                    <Typography variant=\"caption\">ФИО: </Typography>\n                    {[selectedItem.firstName, selectedItem.lastName]\n                        .join(' ')\n                        .trim()}\n                </Typography>\n                <Typography variant=\"body1\">\n                    <Typography variant=\"caption\">\n                        Электронная почта:{' '}\n                    </Typography>\n                    {selectedItem.email}\n                </Typography>\n                <Typography variant=\"body1\">\n                    <Typography variant=\"caption\">Телефон: </Typography>\n                    {selectedItem.phone}\n                </Typography>\n                <Typography variant=\"body1\">\n                    <Typography variant=\"caption\">Адрес: </Typography>\n                    {[\n                        selectedItem.address.state,\n                        selectedItem.address.city,\n                        selectedItem.address.streetAddress,\n                        selectedItem.address.zip,\n                    ]\n                        .join(', ')\n                        .trim()}\n                </Typography>\n                <Typography variant=\"body1\">\n                    <Typography variant=\"caption\">Описание: </Typography>\n                    {selectedItem.description}\n                </Typography>\n            </Paper>\n        )\n    )\n}\n","import React, { useState } from 'react'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nexport default function CreateItemDialog({ open, onClose, onSubmit }) {\n    const [id, setId] = useState(null)\n    const [firstName, setFirstName] = useState(null)\n    const [lastName, setLastName] = useState(null)\n    const [email, setEmail] = useState(null)\n    const [phone, setPhone] = useState(null)\n    const [state, setState] = useState(null)\n    const [city, setCity] = useState(null)\n    const [address, setAddress] = useState(null)\n    const [zip, setZip] = useState(null)\n    const [description, setDescription] = useState(null)\n\n    const handleChangeId = (event) => setId(event.target.value)\n    const handleChangeFirst = (event) => setFirstName(event.target.value)\n    const handleChangeLast = (event) => setLastName(event.target.value)\n    const handleChangeEmail = (event) => setEmail(event.target.value)\n    const handleChangePhone = (event) => setPhone(event.target.value)\n    const handleChangeState = (event) => setState(event.target.value)\n    const handleChangeCity = (event) => setCity(event.target.value)\n    const handleChangeAddress = (event) => setAddress(event.target.value)\n    const handleChangeZip = (event) => setZip(event.target.value)\n    const handleChangeDescription = (event) =>\n        setDescription(event.target.value)\n\n    const resetState = () => {\n        setId(null)\n        setFirstName(null)\n        setLastName(null)\n        setEmail(null)\n        setPhone(null)\n        setState(null)\n        setCity(null)\n        setAddress(null)\n        setZip(null)\n        setDescription(null)\n    }\n\n    const handleClose = () => {\n        onClose()\n        resetState()\n    }\n\n    const handleSubmit = (event) => {\n        onSubmit({\n            id,\n            firstName,\n            lastName,\n            email,\n            phone,\n            address: {\n                streetAddress: address,\n                city,\n                state,\n                zip,\n            },\n            description,\n        })\n        handleClose()\n    }\n\n    return (\n        <Dialog\n            open={open}\n            fullWidth\n            maxWidth=\"sm\"\n            onClose={handleClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                Добавление данных 👨‍💻\n            </DialogTitle>\n            <DialogContent>\n                <TextField\n                    value={id}\n                    onChange={handleChangeId}\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"id\"\n                    label=\"Идентификатор\"\n                    type=\"number\"\n                    fullWidth\n                    required\n                />\n                <TextField\n                    value={firstName}\n                    onChange={handleChangeFirst}\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"firstName\"\n                    label=\"Имя\"\n                    type=\"text\"\n                    fullWidth\n                    required\n                />\n                <TextField\n                    value={lastName}\n                    onChange={handleChangeLast}\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"lastName\"\n                    label=\"Фамилия\"\n                    type=\"text\"\n                    fullWidth\n                    required\n                />\n                <TextField\n                    value={email}\n                    onChange={handleChangeEmail}\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"email\"\n                    label=\"Электронная почта\"\n                    type=\"email\"\n                    fullWidth\n                    required\n                />\n                <TextField\n                    value={phone}\n                    onChange={handleChangePhone}\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"phone\"\n                    label=\"Телефон\"\n                    type=\"text\"\n                    fullWidth\n                    required\n                />\n                <TextField\n                    value={state}\n                    onChange={handleChangeState}\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"state\"\n                    label=\"State\"\n                    type=\"text\"\n                    fullWidth\n                    required\n                />\n                <TextField\n                    value={city}\n                    onChange={handleChangeCity}\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"city\"\n                    label=\"Город\"\n                    type=\"text\"\n                    fullWidth\n                    required\n                />\n                <TextField\n                    value={address}\n                    onChange={handleChangeAddress}\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"streetAddress\"\n                    label=\"Адрес\"\n                    type=\"text\"\n                    fullWidth\n                    required\n                />\n                <TextField\n                    value={zip}\n                    onChange={handleChangeZip}\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"zip\"\n                    label=\"ZIP код\"\n                    type=\"number\"\n                    fullWidth\n                    required\n                />\n                <TextField\n                    value={description}\n                    onChange={handleChangeDescription}\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"description\"\n                    label=\"Описание\"\n                    type=\"text\"\n                    fullWidth\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Отмена\n                </Button>\n                <Button\n                    onClick={handleSubmit}\n                    color=\"primary\"\n                    disabled={\n                        !(\n                            id &&\n                            firstName &&\n                            lastName &&\n                            email &&\n                            phone &&\n                            state &&\n                            city &&\n                            address &&\n                            zip\n                        )\n                    }\n                >\n                    Добавить\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { getData, changeRequirement, addNewItem } from './tableSlice'\n\nimport clsx from 'clsx'\nimport { lighten, fade, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport Container from '@material-ui/core/Container'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\nimport CreateIcon from '@material-ui/icons/Create'\n\nimport debounce from '../../utils/debounce'\n\nimport ItemDetails from './ItemDetails'\nimport CreateItemDialog from './CreateItemDialog'\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1\n    }\n    return 0\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction sortAndFilter(array, filter, comparator) {\n    array = array.filter((el) =>\n        new RegExp(\n            `${filter.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')}`,\n            'im'\n        ).test(Object.values(el))\n    )\n    const stabilizedThis = array.map((el, index) => [el, index])\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0])\n        if (order !== 0) return order\n        return a[1] - b[1]\n    })\n    return stabilizedThis.map((el) => el[0])\n}\n\nconst headCells = [\n    { id: 'id', label: 'Идентификатор' },\n    { id: 'firstName', label: 'Имя' },\n    { id: 'lastName', label: 'Фамилия' },\n    { id: 'email', label: 'Почта' },\n    { id: 'phone', label: 'Телефон' },\n]\n\nfunction EnhancedTableHead(props) {\n    const { order, orderBy, onRequestSort } = props\n\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property)\n    }\n\n    return (\n        <TableHead>\n            <TableRow>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align=\"center\"\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    )\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n}\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    title: {\n        flex: '1 1 100%',\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch',\n        },\n    },\n}))\n\nconst EnhancedTableToolbar = ({ onFilterChange, onCreate }) => {\n    const classes = useToolbarStyles()\n    const [filterInputValue, setFilterInputValue] = useState('')\n\n    const onFilterChangeDebounced = useRef(debounce(onFilterChange, 500))\n        .current\n\n    useEffect(() => {\n        return () => {\n            onFilterChangeDebounced.clear()\n        }\n    }, [])\n\n    const handleFilterInputChange = (event) => {\n        const value = event.target.value\n        setFilterInputValue(value)\n        onFilterChangeDebounced(value)\n    }\n\n    return (\n        <Toolbar className={clsx(classes.root)}>\n            <Typography\n                className={classes.title}\n                variant=\"h6\"\n                id=\"tableTitle\"\n                component=\"div\"\n            >\n                Таблица с данными 😉\n            </Typography>\n\n            <Tooltip title=\"Поиск\">\n                <div className={classes.search}>\n                    <div className={classes.searchIcon}>\n                        <SearchIcon />\n                    </div>\n                    <InputBase\n                        value={filterInputValue}\n                        onChange={handleFilterInputChange}\n                        placeholder=\"Поиск…\"\n                        classes={{\n                            root: classes.inputRoot,\n                            input: classes.inputInput,\n                        }}\n                        inputProps={{ 'aria-label': 'поиск' }}\n                    />\n                </div>\n            </Tooltip>\n\n            <Tooltip title=\"Добавить\">\n                <IconButton aria-label=\"Добавить элемент\" onClick={onCreate}>\n                    <CreateIcon />\n                </IconButton>\n            </Tooltip>\n        </Toolbar>\n    )\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        paddingBottom: theme.spacing(3),\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(3),\n    },\n    table: {\n        minWidth: 750,\n    },\n}))\n\nexport default function EnhancedTable({ isBigDataRequired }) {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const [order, setOrder] = useState('asc')\n    const [filter, setFilter] = useState('')\n    const [orderBy, setOrderBy] = useState('id')\n    const [page, setPage] = useState(0)\n    const [selectedItem, setSelectedItem] = useState(null)\n    const [createItemDialog, setCreateItemDialog] = useState(false)\n\n    const rowsPerPage = 10\n\n    const rows = useSelector((state) => state.table.data)\n\n    useEffect(() => {\n        dispatch(getData(isBigDataRequired))\n    }, [])\n\n    const toggleCreateItemDialog = () => {\n        setCreateItemDialog(!createItemDialog)\n    }\n\n    const handleCreateItem = (newItem) => {\n        dispatch(addNewItem(newItem))\n    }\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc'\n        setOrder(isAsc ? 'desc' : 'asc')\n        setOrderBy(property)\n    }\n\n    const handleRowClick = (event, item) => {\n        setSelectedItem(item)\n    }\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage)\n    }\n\n    const handleBackClick = (event) => {\n        event.preventDefault()\n        dispatch(changeRequirement(null))\n    }\n\n    const handleFilterChange = (filter) => {\n        setFilter(filter)\n    }\n\n    const emptyRows =\n        rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage)\n\n    return (\n        <Container className={classes.root}>\n            <Typography component=\"span\">\n                <Link onClick={handleBackClick}>{'<- Я передумал 🙄'}</Link>\n            </Typography>\n            <Paper\n                component=\"section\"\n                className={classes.paper}\n                data-testid=\"table\"\n            >\n                <EnhancedTableToolbar\n                    onFilterChange={handleFilterChange}\n                    onCreate={toggleCreateItemDialog}\n                />\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size=\"small\"\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            order={order}\n                            orderBy={orderBy}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {sortAndFilter(\n                                rows,\n                                filter,\n                                getComparator(order, orderBy)\n                            )\n                                .slice(\n                                    page * rowsPerPage,\n                                    page * rowsPerPage + rowsPerPage\n                                )\n                                .map((row) => {\n                                    return (\n                                        <TableRow\n                                            data-testid=\"tableRow\"\n                                            hover\n                                            onClick={(event) =>\n                                                handleRowClick(event, row)\n                                            }\n                                            role=\"checkbox\"\n                                            tabIndex={-1}\n                                            key={`${row.id}-${row.email}`}\n                                        >\n                                            <TableCell\n                                                component=\"th\"\n                                                align=\"center\"\n                                                scope=\"row\"\n                                            >\n                                                {row.id}\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                {row.firstName}\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                {row.lastName}\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                {row.email}\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                {row.phone}\n                                            </TableCell>\n                                        </TableRow>\n                                    )\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow\n                                    style={{\n                                        height: 33 * emptyRows,\n                                    }}\n                                >\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                />\n            </Paper>\n            <ItemDetails selectedItem={selectedItem} />\n            <CreateItemDialog\n                open={createItemDialog}\n                onClose={toggleCreateItemDialog}\n                onSubmit={handleCreateItem}\n            />\n        </Container>\n    )\n}\n","export default function debounce(func, wait, immediate) {\n    var timeout, args, context, timestamp, result\n    if (null == wait) wait = 100\n\n    function later() {\n        var last = Date.now() - timestamp\n\n        if (last < wait && last >= 0) {\n            timeout = setTimeout(later, wait - last)\n        } else {\n            timeout = null\n            if (!immediate) {\n                result = func.apply(context, args)\n                context = args = null\n            }\n        }\n    }\n\n    var debounced = function () {\n        context = this\n        args = arguments\n        timestamp = Date.now()\n        var callNow = immediate && !timeout\n        if (!timeout) timeout = setTimeout(later, wait)\n        if (callNow) {\n            result = func.apply(context, args)\n            context = args = null\n        }\n\n        return result\n    }\n\n    debounced.clear = function () {\n        if (timeout) {\n            clearTimeout(timeout)\n            timeout = null\n        }\n    }\n\n    debounced.flush = function () {\n        if (timeout) {\n            result = func.apply(context, args)\n            context = args = null\n\n            clearTimeout(timeout)\n            timeout = null\n        }\n    }\n\n    return debounced\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport Table from './Table'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { changeRequirement } from './tableSlice'\n\n// import { getData, changeRequirement, addNewItem } from './tableSlice'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: '0 auto',\n        marginTop: theme.spacing(15),\n        maxWidth: '600px',\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    button: {\n        borderRadius: 0,\n        padding: '12px 30px',\n    },\n}))\n\nexport default function Milestone() {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const isBigDataRequired = useSelector(\n        (state) => state.table.isBigDataRequired\n    )\n\n    const handleButtonClick = (isBigDataRequired) => {\n        dispatch(changeRequirement(isBigDataRequired))\n    }\n\n    return isBigDataRequired === null ? (\n        <Container>\n            <div className={classes.root}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    onClick={() => handleButtonClick(false)}\n                >\n                    Небольшой набор данных 😐\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    onClick={() => handleButtonClick(true)}\n                >\n                    Большой набор данных 🙀\n                </Button>\n            </div>\n        </Container>\n    ) : (\n        <Table isBigDataRequired={isBigDataRequired} />\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Backdrop from '@material-ui/core/Backdrop'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#6ae695',\n    },\n}))\n\nexport default function SimpleBackdrop() {\n    const classes = useStyles()\n\n    const dataLoading = useSelector((state) => state.table.loading)\n\n    return (\n        dataLoading && (\n            <Backdrop className={classes.backdrop} open={dataLoading}>\n                <CircularProgress color=\"inherit\" data-testid=\"backdrop\" />\n            </Backdrop>\n        )\n    )\n}\n","import React, { useState } from 'react'\r\nimport Header from '../../components/Header'\r\nimport Milestone from '../../features/table/Milestone'\r\n\r\nimport Backdrop from '../../components/Backdrop'\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Header />\r\n            <main>\r\n                <Milestone />\r\n            </main>\r\n            <Backdrop />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport tableReducer from '../features/table/tableSlice'\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        table: tableReducer,\r\n    },\r\n})\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles'\n\nexport default createMuiTheme({\n    palette: {\n        primary: {\n            main: '#0e43fe',\n        },\n        secondary: {\n            main: '#6ae695',\n        },\n    },\n})\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './components/App'\r\nimport store from './app/store'\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { ThemeProvider } from '@material-ui/core/styles'\r\nimport theme from './utils/customTheme'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <ThemeProvider theme={theme}>\r\n                <App />\r\n            </ThemeProvider>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}